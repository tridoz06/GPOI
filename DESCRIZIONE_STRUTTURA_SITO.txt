
GPOI
|
├── CSS
│   ├── page.css
│   ├── projects.css
│   └── style.css
|
├── IMG
│   ├── DOMANDA_OFFERTA
│   │   ├── domanda.jpeg
│   │   ├── equilibrio.jpg
│   │   └── offerta.jpeg
|   |
│   ├── GESTIONE_PROGETTO
│   │   ├── projrct.jpg
│   │   ├── schema_progetto.jpeg
│   │   └── wbs.png
|   |
│   ├── IMPRESA
│   │   ├── impresa_economica.jpg
│   │   ├── impresa.jpg
│   │   └── impresa_successo.png
|   |
│   ├── INFLAZIONE
│   │   ├── effetti.jpeg
│   │   └── inflazione.webp
|   |
│   ├── LEADER
│   │   ├── leader_autorevole.jpeg
│   │   ├── leader_autoritario.jpeg
│   │   └── leader_pic.jpg
|   |
│   ├── PIL
│   │   ├── calcolo_pil.jpg
│   │   ├── criticità_pil.webp
│   │   └── pil.jpg
|   |
│   ├── SCUOLA_IMPRESA
│   │   ├── dibattito.jpeg
│   │   └── scuola.png
|   |
│   └── STELLANTIS
│       ├── 500e.jpg
│       ├── mirafiori.jpg
│       └── stellants.webp
|
├── JS
│   ├── bep.js
│   ├── documentazione.js
│   ├── main.js
│   └── page.js
|
├── PHP_FUNCTIONS
│   ├── main_cards.php
│   ├── projects_card.php
│   └── read_database.php
|
├── index.php
└── page.php



HTML
Il nostro sito genera solamente 2 pagine html, una per la "home page" e una per la pagina degli argomenti. Entrambe vengono generate attraverso 
dei file php, rispettivamente uno per la home page chiamato "index.php" e uno per le pagine dei vari argomenti chiamata "page.php"

HOME PAGE
La home page è formata principalmente da due div, uno chiamato "container-bg" che contiente il titolo e il carosello, e un div chiamato 
"who we are", che utilizziamo come footer. 
Il "container-bg" al suo interno contiene il titolo, i 2 bottoni per scorrere il carosello e il contenitore del caroselli, chiamato "carousel-container".
"Carousel Container" al suo interno contiene il vero e proprio div che gestisce il carosello, e al interno di esso le 3 carte che vengono rappresentate. 
Le carte sono a loro volta composte da 2 div, un "content-box" ed un "num-box. "Content-box" contiene  il titol dell'argomento, una piccola descrzione di esso 
e il form per farsi generare la pagine dell'argomento. Mentre "num-box" contiene il numero dell'argomento. 
Il codice è questo (è presente solamente una card per il semplice fatto che le altre due sono completamente copia incolla). 

<div class="container_bg">
			<span class="title-up fade__in">GESTIONE IMPRESA </span>

      <button class="btn prev-btn">❮</button>

			<div class="carousel-container">
			
				<div class="carousel">

            <div class="parent fade__in" style="filter: hue-rotate(72deg);">
                <div class="card">
                    <div class="content-box">
                        <h1 class="card-title">Leader</h1>

                        <p class="card-content">
                            La figura più importante dell'impresa. Deve essere in grado di farsi seguire e deve guidare il proprio team alla buona riuscita del progetto.
                        </p>    
                <form action="page.php" method="POST">
                    <input name="page_name" value="Leader" type="hidden">
                    <button type="submit" class="see-more">MORE INFO</button>
                </form>

                    </div>
                    <div class="num-box">
                        <span class="arg">ARG</span>
                        <span class="num">3</span>
                    </div>
                </div>
            </div>

        </div>

			</div>
            <button class="btn next-btn">❯</button>
		</div>

</div>

PAGES
Le altre pagine invece sono formate da una navbar che permette navigare tra le varie pagine, e tornare alla home. Dopo la navbar sono presenti i vari paragrafi, ognuno 
contenuto in un div chiamato "row", formato da un div "text" che contiene il titolo e il testo del paragrafo, e da un div che varia tra "image", "canva", o "void". 
"image" server per contenere un immagine, "canva" per contenere un canvas per grafici dinamico (come per esempio quello del bep), mentre "void" indica che quello spazio
deve essere tenuto vuoto. 
La navbar ha un sistema di carosello esattamente come le card della home page, e ne vengono sempre visualizzate tre alla volta. 

<nav class="menu">
  <button class="prev-btn btn">❮</button>
  <div class="menu_item" style="filter: hue-rotate(0deg);">
    <form action="page.php" method="POST">
        <input name="page_name" value="Impresa" type="hidden">
        <button type="submit" class="menu_item_link">Impresa</button>
    </form>
  </div>
    
  <div class="menu_item" style="filter: hue-rotate(36deg);">                            
    <form action="page.php" method="POST">
      <input name="page_name" value="Progetto" type="hidden">
      <button type="submit" class="menu_item_link">Progetto</button>
    </form>
  </div>
    
  <div class="menu_item" style="filter: hue-rotate(72deg);">
    <form action="page.php" method="POST">
      <input name="page_name" value="Leader" type="hidden">
      <button type="submit" class="menu_item_link">Leader</button>
    </form>
  </div>
  
  <button class="next-btn btn">❯</button>
</nav>

"menu" è la classe principale, che contiente i div "menu_item", i veri e propri elementi del carosello che vengno visualizzati. 


CSS



JS



PHP
Appiamo decido di generare il contenuto delle pagine in modo dinamico attraverso php e la lettura dei dati
da un database per rendere il tutto più efficiente nella modifica, sia di eliminazione che di aggiunta

MAIN CARDS
Si occupa di creare le carte per la home page.
<?php
    // Includiamo il file per la lettura del database
    include "read_database.php";

/**
 * Funzione per generare le card HTML basate sui dati estratti dal database.
 * 
 * @param string $table_name Il nome della tabella da cui recuperare i dati.
 * @return string Il contenuto HTML generato con le card.
 */

 
function create_cards($table_name) {

    // Inizializziamo una stringa vuota per contenere le card
    $content = "";

    // Recuperiamo i dati dal database (Id, Title, Arg_Desc e Link) per la tabella specificata
    $table_rows = read("SELECT Id, Title, Arg_Desc, Link FROM {$table_name}");

    // Iteriamo su ogni riga dei risultati del database
    foreach ($table_rows as $data) {
        
        // Inizializziamo il form vuoto
        $form = "";

        // Se il titolo della card è "Our Projects", indirizziamo il form a "projects.php"
        if ($data['Title'] == "Our Projects") {
            $form = "
                <form action=\"projects.php\" method=\"POST\" >
                    <button type=\"submit\" class=\"see-more\">MORE INFO</button>
                </form>            
            ";
        } else {
            // Altrimenti, il form invierà i dati a "page.php"
            $form = "
                <form action=\"page.php\" method=\"POST\" >
                    <input name=\"page_name\" value=\"{$data['Title']}\" type=\"hidden\">
                    <button type=\"submit\" class=\"see-more\">MORE INFO</button>
                </form>
            ";
        }

        // Costruiamo il contenuto HTML della card con titolo, descrizione e form
        $content .= "
            <div class=\"parent fade__in\">
                <div class=\"card\">
                    <div class=\"content-box\">
                        <h1 class=\"card-title\">{$data['Title']}</h1>

                        <p class=\"card-content\">
                            {$data['Arg_Desc']}
                        </p>

                        {$form}

                    </div>
                    <div class=\"date-box\">
                        <span class=\"month\">ARG</span>
                        <span class=\"date\">{$data['Id']}</span>
                    </div>
                </div>
            </div>
        ";
    }
    
    // Ritorniamo il contenuto HTML generato
    return $content;
}
?>


PROJECTSS_CARDS
Si occupa di creare le carte per i nostri progetti personali
<?php

// Includiamo il file per la lettura del database
include "read_database.php";

/**
 * Funzione per generare card HTML basate sui dati della tabella "Projects".
 * 
 * Questa funzione recupera tutti i record dalla tabella "Projects" e genera
 * un blocco HTML per ciascun progetto, con titolo, descrizione e link esterno.
 *
 * @return string Il contenuto HTML generato con le card dei progetti.
 */
function create_cards(){
    // Inizializziamo una stringa vuota per contenere l'output HTML
    $content = "";

    // Recuperiamo tutti i record dalla tabella "Projects"
    $table_rows = read("SELECT * FROM Projects");

    // Iteriamo su ogni riga dei risultati del database
    foreach ($table_rows as $data) {
        // Creiamo una card HTML per ogni progetto con titolo, descrizione e link
        $content .= "
            <article class=\"project-card\">
                <h2>{$data["Title"]}</h2>
                <p>{$data["Arg_Desc"]}</p>
                <a href=\"{$data["Link"]}\" target=\"_blank\" class=\"btn\">SEE MORE</a>
            </article>        
        ";
    }

    // Ritorniamo il contenuto HTML generato
    return $content;
}
?>


READ_DATABASE
Si occupa di leggere e ritornare i dati dal database
<?php

/**
 * Classe per memorizzare le credenziali di accesso al database.
 * 
 * Questa classe contiene le informazioni necessarie per connettersi al database MySQL,
 * come il server, il nome utente, la password e il nome del database.
 */
class db_credentials {
    public static $servername = "185.229.236.208"; // Indirizzo del server MySQL
    public static $username = "sito";             // Nome utente per l'accesso al database
    public static $password = "Sito2024_";        // Password dell'utente del database
    public static $dbname = "DB_Sito";            // Nome del database da utilizzare
}

/**
 * Funzione per eseguire query SQL di lettura sul database.
 * 
 * Questa funzione stabilisce una connessione con il database utilizzando PDO,
 * esegue la query fornita e restituisce i risultati sotto forma di array associativo.
 *
 * @param string $query La query SQL da eseguire.
 * @return array|string Un array contenente i risultati della query o un messaggio di errore.
 */
function read($query) {
    try {
        // Creazione della stringa DSN per la connessione al database
        $dsn = "mysql:host=" . db_credentials::$servername . ";dbname=" . db_credentials::$dbname . ";charset=utf8";

        // Creazione dell'oggetto PDO per la connessione al database
        $pdo = new PDO($dsn, db_credentials::$username, db_credentials::$password);
        
        // Impostiamo PDO per lanciare eccezioni in caso di errore
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    } catch (PDOException $e) {
        // Se si verifica un errore nella connessione, restituiamo un messaggio di errore
        return "Errore lettura DB";
    }

    // Prepariamo ed eseguiamo la query SQL
    $stmt = $pdo->prepare($query);
    $stmt->execute();

    // Recuperiamo i risultati come array associativo
    $table_rows = $stmt->fetchAll(PDO::FETCH_ASSOC);

    // Restituiamo i dati ottenuti dalla query
    return $table_rows;
}
?>

INDEX
Si occupa di creare la pagina principale
<!DOCTYPE html>
<html lang="it">

<head>

    <!-- Titolo della pagina -->
    <title>Gestione Impresa</title>

    <!-- Collegamento al file CSS per lo stile della pagina -->
    <link rel="stylesheet" href="CSS/style.css" />

    <!-- Impostazione della codifica dei caratteri -->
    <meta charset="UTF-8">
    
    <!-- Configurazione della viewport per garantire la responsività su dispositivi mobili -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

</head>

<body>

    <!-- Contenitore principale con sfondo -->
    <div class="container_bg">
        
        <!-- Titolo principale con animazione di fade-in -->
        <span class="title-up fade__in">GESTIONE IMPRESA</span>

        <!-- Pulsante per scorrere all'indietro nel carosello -->
        <button class="btn prev-btn">&#10094;</button>

        <!-- Contenitore del carosello -->
        <div class="carousel-container">

            <!-- Sezione che conterrà le card generate dinamicamente -->
            <div class="carousel">

                <?php
                    // Inclusione del file PHP che genera le card
                    include "PHP_FUNCTIONS/main_cards.php";

                    // Creazione delle card basate sulla tabella "Cards" del database
                    $content = create_cards("Cards");

                    // Stampa dell'output HTML generato
                    echo $content;
                ?>

            </div>

        </div>

        <!-- Pulsante per scorrere in avanti nel carosello -->
        <button class="btn next-btn">&#10095;</button>

    </div>

    <!-- Sezione "Chi siamo" con i nomi degli autori del progetto -->
    <div class="who_we_are">
        Made by<br>
        Concaro Davide - Popa Sebastiano - Tridapali Leonardo<br>
        5BIIN 2024-2025<br>
    </div>

    <!-- Collegamento al file JavaScript per gestire l'interattività della pagina -->
    <script src="JS/main.js"></script>

</body>

</html>

PAGE
Si occupa di creare le varie pagine con gli argomenti
<!DOCTYPE html>
<html lang="it">

<head>
    <!-- Collegamento al file CSS per lo stile della pagina -->
    <link rel="stylesheet" href="CSS/page.css">
</head>

<body>

    <?php
        // Inclusione del file che contiene la funzione per leggere i dati dal database
        include "PHP_FUNCTIONS/read_database.php";

        /**
         * Funzione per creare la barra di navigazione dinamicamente
         * Legge i titoli delle schede dalla tabella "Cards" e crea pulsanti di navigazione
         */
        function create_navbar() {
            // Recupera i titoli delle schede dal database
            $table_rows_main_arg = read("SELECT Title FROM Cards");

            // Inizio della navbar con pulsante per scorrere indietro
            $nav_bar_content  = "<nav class=\"menu\"><br>
            <button class=\"prev-btn btn\">&#10094;</button>";

            // Creazione dei pulsanti per ogni scheda
            foreach ($table_rows_main_arg as $data) {
                $form = "";
                if ($data["Title"] == "Our Projects") {
                    // Se il titolo è "Our Projects", reindirizza alla pagina "projects.php"
                    $form = "
                        <form action=\"projects.php\" method=\"POST\">
                            <button type=\"submit\" class=\"menu_item_link\">{$data["Title"]}</button>
                        </form>
                    ";
                } else {
                    // Altrimenti, reindirizza a "page.php" passando il titolo come input nascosto
                    $form = "
                        <form action=\"page.php\" method=\"POST\">
                            <input name=\"page_name\" value=\"{$data["Title"]}\" type=\"hidden\">
                            <button type=\"submit\" class=\"menu_item_link\">{$data["Title"]}</button>
                        </form>
                    ";
                }
                // Aggiunge il pulsante alla navbar
                $nav_bar_content .= "
                    <div class=\"menu_item\">
                        {$form}
                    </div>
                ";
            }

            // Aggiunta del pulsante per scorrere in avanti e chiusura della navbar
            $nav_bar_content .= "<button class=\"next-btn btn\">&#10095;</button>
            </nav><br><br>";
            return $nav_bar_content;
        }

        /**
         * Funzione per generare il contenuto dinamico della pagina
         * @param string $title_search Titolo della scheda selezionata
         * @return string Contenuto HTML generato dinamicamente
         */
        function create_content($title_search) {
            // Recupera l'ID della scheda selezionata
            $table_rows_cards = read("SELECT Id FROM Cards WHERE Title=\"{$title_search}\"");
            $content = "<div class=\"content\">";

            foreach ($table_rows_cards as $main_data) {
                // Recupera gli argomenti relativi alla scheda selezionata
                $table_rows_arguments = read("SELECT * FROM Args WHERE numero_pagina=\"{$main_data["Id"]}\"");

                foreach ($table_rows_arguments as $subdata) {
                    $content .= "<div class=\"row\">";

                    $id = $subdata["numero_argomento"];
                    $content_type = $subdata["Content_Type"];
                    $direction = $id % 2; // Alterna la disposizione del contenuto

                    switch ($content_type) {
                        case "IMG":
                            // Se il contenuto è un'immagine, la posiziona in modo alternato
                            if ($direction == 1) {
                                $content .= "
                                    <div class=\"text left\">
                                        <h2 class=\"arg_title\">{$subdata["titolo"]}</h2>
                                        <p>{$subdata["testo"]}</p>
                                    </div>
                                    <div class=\"image right\">
                                        <img src=\"{$subdata["link_immagine"]}\">
                                    </div>
                                ";
                            } else {
                                $content .= "
                                    <div class=\"image left\">
                                        <img src=\"{$subdata["link_immagine"]}\">
                                    </div>
                                    <div class=\"text right\">
                                        <h2 class=\"arg_title\">{$subdata["titolo"]}</h2>
                                        <p>{$subdata["testo"]}</p>
                                    </div>
                                ";
                            }
                            break;

                        case "VOID":
                            // Se il contenuto è vuoto, viene lasciato uno spazio vuoto
                            if ($direction == 1) {
                                $content .= "
                                    <div class=\"text left\">
                                        <h2 class=\"arg_title\">{$subdata["titolo"]}</h2>
                                        <p>{$subdata["testo"]}</p>
                                    </div>
                                    <div class=\"void right\"></div>
                                ";
                            } else {
                                $content .= "
                                    <div class=\"void left\"></div>
                                    <div class=\"text right\">
                                        <h2 class=\"arg_title\">{$subdata["titolo"]}</h2>
                                        <p>{$subdata["testo"]}</p>
                                    </div>
                                ";
                            }
                            break;

                        case "CANVA":
                            // Se il contenuto è una canvas, include lo script JavaScript per la gestione
                            if ($direction == 1) {
                                $content .= "
                                    <div class=\"text left\">
                                        <h2 class=\"arg_title\">{$subdata["titolo"]}</h2>
                                        <p>{$subdata["testo"]}</p>
                                    </div>
                                    <div class=\"canva right\"></div>
                                    <script src=\"JS/bep.js\"></script>
                                ";
                            } else {
                                $content .= "
                                    <div class=\"canva left\"></div>
                                    <div class=\"text right\">
                                        <h2 class=\"arg_title\">{$subdata["titolo"]}</h2>
                                        <p>{$subdata["testo"]}</p>
                                    </div>
                                    <script src=\"JS/bep.js\"></script>
                                ";
                            }
                            break;
                    }

                    $content .= "</div>";
                }
            }

            $content .= "</div>";
            return $content;
        }

        /**
         * Funzione per ottenere il numero della pagina basato sul titolo
         * @param string $page_title Titolo della pagina
         * @return int Numero della pagina
         */
        function get_page_number($page_title) {
            $table_rows_selection_id_page = read("SELECT Id FROM Cards WHERE Title=\"{$page_title}\"");
            $number = $table_rows_selection_id_page[0]["Id"] - 1;
            return $number;
        }

        // Recupera il titolo della pagina dalla richiesta POST
        $page_title = $_POST["page_name"];

        // Ottiene il numero della pagina corrispondente al titolo
        $page_number = get_page_number($page_title);

        // Stampa i link di navigazione
        echo "
        <div class=\"menu_link_div\">
            <a href=\"index.php\" class=\"menu_link\">
                HOME
            </a>
            <a number_page=\"{$page_number}\" class=\"page_number_anchor\" style=\"display:none;\"></a>
        </div>            
        ";

        // Genera la navbar e il contenuto della pagina
        $navbar = create_navbar();
        $content = create_content($page_title);

        // Stampa la navbar e il contenuto generato
        echo $navbar;
        echo $content;
    ?>

    <!-- Collegamento al file JavaScript per la gestione della pagina -->
    <script src="JS/page.js"></script>

</body>

</html>

PROJECTS
Si occupa di creare la pagina contenente i nostri progetti
<!DOCTYPE html>
<html lang="it">
    
    <head>
        <!-- Definizione della codifica dei caratteri e della visualizzazione per dispositivi mobili -->
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        
        <!-- Titolo della pagina -->
        <title>I nostri progetti GitHub</title>
        
        <!-- Link al file CSS per la formattazione della pagina -->
        <link rel="stylesheet" href="CSS/projects.css">
    </head>

    <body>

        <!-- Sezione Header: contiene il titolo e la descrizione della pagina -->
        <header>
            <h1>I nostri Progetti GitHub</h1>
            <p>Esplora i nostri ultimi fantastici lavori.</p>

            <!-- Form con bottone per tornare alla homepage -->
            <form action="index.php" method="POST">
                <button class="btn">HOME</button>
            </form>

        </header>

        <!-- Sezione principale della pagina: visualizzazione dei progetti -->
        <section class="projects-grid">

            <?php
                // Inclusione del file PHP contenente la funzione per generare i progetti
                include "PHP_FUNCTIONS/projects_card.php";

                // Chiamata alla funzione 'create_cards' per ottenere il contenuto HTML dei progetti
                $content = create_cards();
                
                // Echo del contenuto generato dalla funzione per visualizzarlo nella pagina
                echo $content;
            ?>

        </section>

        <!-- Footer: informazioni sui creatori della pagina -->
        <footer>
            <p>Made by Concaro Davide - Popa Sebastiano - Tridapali Leonardo 5BIIN ITIS E. Fermi.</p>
        </footer>

    </body>
</html>


SQL
Utilizziamo un database gestito con MySql in modo da rendere più facile la creazione di nuove pagine o di nuovi paragrafi perchè dobbiamo solamente 
inserire i dati all'interno dal database e poi penserà alla creazione di tutte la pagine in modo dinamico e in tempo reale i file .php, che leggono
i dati dal database (di cui ne esistono 2 copie, una in locale sul computer di Tridapali Leonardo e una su un server pubblico, in modo da poter 
visualizzare il sito qual'ora non si abbia a disposizione una connessione ad internet).

Il database contiene due tabelle: Cards e Args, strutturati come segue:
CARDS:
+----------+------+------+-----+---------+----------------+
| Field    | Type | Null | Key | Default | Extra          |
+----------+------+------+-----+---------+----------------+
| Id       | int  | NO   | PRI | NULL    | auto_increment |
| Title    | text | NO   |     | NULL    |                |
| Arg_Desc | text | NO   |     | NULL    |                |
| Link     | text | NO   |     | NULL    |                |
+----------+------+------+-----+---------+----------------+
Id
  -indica il numero della carta ed il numero dell'argomento all'interno del carosello dinamico

Title
  -indica il titolo dell'argomento e di cosa si parlerà all'interno della pagina di 

Args_Desc
  -è una piccola descrizione generale che spiega di cosa si parla nell'immagine, in modo
   che l'utente non debba per forza aprire la pagine per capire se gli interessa di cosa 
   si andrà a parlare, ma lo decide semplicemente leggendo una breve descrizione di qualche 
   riga

Link
  -rappresenta a quale pagina bisogna collegarsi. È un campo che viene utilizzato per la 
   creazione dei form con all'interno i bottoni che chiamono il file "page.php" per fargli
   capire quali dati deve andare a prelevare dal database. 

ARGS:
+------------------+------+------+-----+---------+-------+
| Field            | Type | Null | Key | Default | Extra |
+------------------+------+------+-----+---------+-------+
| numero_argomento | int  | NO   |     | NULL    |       |
| numero_pagina    | int  | NO   |     | NULL    |       |
| titolo           | text | NO   |     | NULL    |       |
| testo            | text | NO   |     | NULL    |       |
| link_immagine    | text | NO   |     | NULL    |       |
| Content_Type     | text | YES  |     | NULL    |       |
+------------------+------+------+-----+---------+-------+

numero_argomento
  -Indica la posizione dell'argomento di cui si andrà a parlare all'interno della pagina, per esempio 
   il numero 1 sarà il primo paragrafo, mentre il numero 2 sarà il secondo e così via. Utilizziamo anche 
   i numeri per capire se il testo va posizionato a sinistra con un immagine a destra o viceversa. Infatti
   se il numero è dispari sarà "testo immagine" mentre se il numero è pari sarà "immagine testo"

numero_pagina
  -Il numero della pagina riprende gli Id presenti nella tabella Cards, per capire a quale pagina appartiene
   l'argomento presente.   


titolo
  -rappresenta il tiolo del paragrafo

testo
  -rappresenta il contenuto del paragrafo. Dentro al testo sono già presenti i tag HTML <b> e <br> per mettere
   in grassetto e alcune parole e andare a capo a piacere, quindi non deve essere fatto in modo dinamico in PHP.

link_immagine
  -il path relativo per andare a trovare l'immaginea all'interno della cartella del sito per capire a quale paragrafo
   viene assegnata tot immagine

content_type
  -indica il tipo di contenuto e può essere "IMG" "VOID" o "CANVA".
     -IMG: indica che di fianco al testo ci andrà posizionata un immagine.
     -CANVA: indica che di fianco al testo ci andrà posizionato un canvas (attraverso il javascript, nel php verrà solamente creato un div di classe "canva"
             per far capire dove andrà inserito il canvas) dinamico per grafico come per esempio quello del BEP









